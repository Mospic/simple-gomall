// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: product.proto

package server

import (
	"context"

	"mall/service/product/internal/logic"
	"mall/service/product/internal/svc"
	"mall/service/product/proto/product"
)

type ProductCatalogServiceServer struct {
	svcCtx *svc.ServiceContext
	product.UnimplementedProductCatalogServiceServer
}

func NewProductCatalogServiceServer(svcCtx *svc.ServiceContext) *ProductCatalogServiceServer {
	return &ProductCatalogServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *ProductCatalogServiceServer) ListProducts(ctx context.Context, in *product.ListProductsReq) (*product.ListProductsResp, error) {
	l := logic.NewListProductsLogic(ctx, s.svcCtx)
	return l.ListProducts(in)
}

func (s *ProductCatalogServiceServer) GetProduct(ctx context.Context, in *product.GetProductReq) (*product.GetProductResp, error) {
	l := logic.NewGetProductLogic(ctx, s.svcCtx)
	return l.GetProduct(in)
}

func (s *ProductCatalogServiceServer) SearchProducts(ctx context.Context, in *product.SearchProductsReq) (*product.SearchProductsResp, error) {
	l := logic.NewSearchProductsLogic(ctx, s.svcCtx)
	return l.SearchProducts(in)
}

func (s *ProductCatalogServiceServer) CreateProducts(ctx context.Context, in *product.CreateProductsReq) (*product.CreateProductsResp, error) {
	l := logic.NewCreateProductsLogic(ctx, s.svcCtx)
	return l.CreateProducts(in)
}

func (s *ProductCatalogServiceServer) UpdateProducts(ctx context.Context, in *product.UpdateProductsReq) (*product.UpdateProductsResp, error) {
	l := logic.NewUpdateProductsLogic(ctx, s.svcCtx)
	return l.UpdateProducts(in)
}

func (s *ProductCatalogServiceServer) DeleteProducts(ctx context.Context, in *product.DeleteProductsReq) (*product.DeleteProductsResp, error) {
	l := logic.NewDeleteProductsLogic(ctx, s.svcCtx)
	return l.DeleteProducts(in)
}
